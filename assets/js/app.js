function css(e,t){if("string"==typeof e&&(e=document.querySelector(e)),"string"==typeof t)return window.getComputedStyle(e).getPropertyValue(t);for(var n in t)e.style.setProperty(n,t[n])}addEventListener("DOMContentLoaded",function(){const e=document.getElementById("navbar"),t=document.querySelectorAll("main>.section");if("undefined"!=typeof IntersectionObserver){const n=new IntersectionObserver(function(e,t){e.forEach(function(e){e.intersectionRatio>0&&(t.unobserve(e.target),e.target.classList.remove("before-animation"))})});e.classList.remove("before-animation"),setTimeout(function(){t.forEach(function(e){n.observe(e)})},400)}else{console.log("Compatibility mode, IntersectionObserver not supported");let n=[...t],o=function(){let t=window.scrollY+window.innerHeight,o=e?window.scrollY+e.getBoundingClientRect().height:window.scrollY;n=n.filter(function(e){let n=css(e,"transform").match(/matrix\(.*, (\d*\.?\d+)\)/)[1],i=e.getBoundingClientRect().top+window.scrollY-n,s=i+e.getBoundingClientRect().height;return!(t>i&&o<s)||(e.classList.remove("before-animation"),!1)})};e.classList.remove("before-animation"),setTimeout(o,400),addEventListener("scroll",o)}});var e,t;window.innerWidth,addEventListener("DOMContentLoaded",function(){e=document.getElementById("navbar"),t=e.getBoundingClientRect().height}),addEventListener("DOMContentLoaded",function(){var t=new MutationObserver(function(){document.querySelector("a.nav-link.active")?e.classList.add("sticky"):e.classList.remove("sticky")});[...document.getElementsByClassName("nav-link")].forEach(function(e){t.observe(e,{attributes:!0,attributeFilter:["class"]})})}),addEventListener("DOMContentLoaded",function(){document.querySelectorAll("#navbar a.nav-link").forEach(function(e){e.addEventListener("click",function(e){e.preventDefault();let n=document.getElementById(e.target.href.substring(e.target.href.lastIndexOf("#")+1)),o=n.getBoundingClientRect().top+window.scrollY-t-parseInt((i="--navbar-margin",getComputedStyle(document.documentElement).getPropertyValue(i)));var i;if(css(n,"opacity")<1){let e=css(n,"transform").match(/matrix\(.*, (\d*\.?\d+)\)/)[1];window.scroll({top:Math.ceil(o)-Math.floor(e),behavior:"smooth"})}else window.scroll({top:Math.ceil(o),behavior:"smooth"})})})});var n=Math.ceil(window.innerWidth/2);addEventListener("scroll",function(){var o=document.querySelector("a.nav-link.active");if(o&&o.classList.remove("active"),0!==e.getBoundingClientRect().top)return;let i,s=t+1;for(;null===(i=document.elementFromPoint(n,s).closest(".row.section"));)s+=100;document.querySelector('a.nav-link[href="#'+i.id+'"]').classList.add("active")}),document.addEventListener("DOMContentLoaded",function(){[...document.querySelectorAll(".gallery-item img")].forEach(function(e){e.onclick=function(e){e.preventDefault(),function(e,t){let n,o=document.querySelector(".pswp"),i=0;{let o=0;n=[...e.closest(t).querySelectorAll("img")].map(function(t){return t===e&&(i=o),o++,{src:t.currentSrc,msrc:t.currentSrc,w:t.naturalWidth,h:t.naturalHeight}})}pswp=new PhotoSwipe(o,PhotoSwipeUI_Default,n,{index:i,getThumbBoundsFn:function(){let t=window.pageYOffset||document.documentElement.scrollTop,n=e.getBoundingClientRect();return{x:n.left,y:n.top+t,w:n.width}},showHideOpacity:!0,bgOpacity:.32,shareEl:!1,closeElClasses:["item","caption","zoom-wrap","ui"]}),pswp.init(),pswp.listen("initialZoomInEnd",function(){css(".pswp__img--placeholder",{display:"none"})}),pswp.listen("close",function(){css("body",{overflow:""})})}(e.target,".gallery"),css("body",{overflow:"hidden"})}}),document.body.insertAdjacentHTML("beforeend",'\x3c!-- Root element of PhotoSwipe. Must have class pswp. --\x3e<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">    \x3c!-- Background of PhotoSwipe.          It\'s a separate element as animating opacity is faster than rgba(). --\x3e    <div class="pswp__bg"></div>    \x3c!-- Slides wrapper with overflow:hidden. --\x3e    <div class="pswp__scroll-wrap">        \x3c!-- Container that holds slides.             PhotoSwipe keeps only 3 of them in the DOM to save memory.            Don\'t modify these 3 pswp__item elements, data is added later on. --\x3e        <div class="pswp__container">            <div class="pswp__item"></div>            <div class="pswp__item"></div>            <div class="pswp__item"></div>        </div>        \x3c!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. --\x3e        <div class="pswp__ui pswp__ui--hidden">            <div class="pswp__top-bar">                \x3c!--  Controls are self-explanatory. Order can be changed. --\x3e                <div class="pswp__counter"></div>                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>                <button class="pswp__button pswp__button--share" title="Share"></button>                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>                \x3c!-- Preloader demo https://codepen.io/dimsemenov/pen/yyBWoR --\x3e                \x3c!-- element will get class pswp__preloader--active when preloader is running --\x3e                <div class="pswp__preloader">                    <div class="pswp__preloader__icn">                      <div class="pswp__preloader__cut">                        <div class="pswp__preloader__donut"></div>                      </div>                    </div>                </div>            </div>            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">                <div class="pswp__share-tooltip"></div>             </div>            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">            </button>            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">            </button>            <div class="pswp__caption">                <div class="pswp__caption__center"></div>            </div>        </div>    </div></div>')});